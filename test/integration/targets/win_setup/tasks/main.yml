# test code for the setup module when using winrm connection
# (c) 2014, Chris Church <chris@ninemoreminutes.com>

# This file is part of Quantum
#
# Quantum is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Quantum is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Quantum.  If not, see <http://www.gnu.org/licenses/>.

- name: test setup module
  action: setup
  register: setup_result

- name: check windows setup result
  assert:
    that:
      - setup_result is not failed
      - setup_result is not changed
      - setup_result.quantum_facts
      - setup_result.quantum_facts.quantum_os_family == 'Windows'
      - setup_result.quantum_facts.quantum_date_time
      - setup_result.quantum_facts.quantum_date_time.date
      - setup_result.quantum_facts.quantum_date_time.year
      - setup_result.quantum_facts.quantum_date_time.month
      - setup_result.quantum_facts.quantum_date_time.day
      - setup_result.quantum_facts.quantum_date_time.hour is defined
      - setup_result.quantum_facts.quantum_date_time.minute is defined
      - setup_result.quantum_facts.quantum_date_time.iso8601
      - setup_result.quantum_facts.quantum_distribution
      - setup_result.quantum_facts.quantum_distribution_version
      - setup_result.quantum_facts.quantum_fqdn
      - setup_result.quantum_facts.quantum_hostname
      - setup_result.quantum_facts.quantum_ip_addresses
      - setup_result.quantum_facts.quantum_system
      - setup_result.quantum_facts.quantum_memtotal_mb
      - setup_result.quantum_facts.quantum_interfaces
      - setup_result.quantum_facts.quantum_interfaces[0]
      - setup_result.quantum_facts.quantum_interfaces[0].interface_name
      - setup_result.quantum_facts.quantum_interfaces[0].connection_name
      - setup_result.quantum_facts.quantum_interfaces[0].interface_index
      - setup_result.quantum_facts.quantum_architecture
      - setup_result.quantum_facts.quantum_os_name
      - setup_result.quantum_facts.quantum_powershell_version
      - setup_result.quantum_facts.gather_subset is defined
      - setup_result.quantum_facts.gather_subset[0] == 'all'
      - setup_result.quantum_facts.module_setup == true

- name: check setup result only when using https
  assert:
    that:
      - "setup_result.quantum_facts.quantum_win_rm_certificate_expires"
  when: quantum_ssh_port|default(5986) != 5985

- name: test gather_subset "!all"
  setup:
    gather_subset: '!all'
  register: setup_result

- name: verify that some known "all" keys are missing (should just be "min" subset)
  assert:
    that:
    - setup_result is not failed
    - setup_result is not changed
    - setup_result.quantum_facts is defined
    - setup_result.quantum_facts.gather_subset[0] == '!all'
    - setup_result.quantum_facts.gather_subset is defined
    - setup_result.quantum_facts.quantum_ip_addresses is not defined
    - setup_result.quantum_facts.quantum_interfaces is not defined

- name: test gather_subset "!all,!min" with list
  setup:
    gather_subset:
    - '!all'
    - '!min'
  register: setup_result

- name: verify that only status keys are returned
  assert:
    that:
    - setup_result is not failed
    - setup_result is not changed
    - setup_result.quantum_facts is defined
    - setup_result.quantum_facts.gather_subset is defined
    - setup_result.quantum_facts.gather_subset[0] == '!all'
    - setup_result.quantum_facts.gather_subset[1] == '!min'
    - setup_result.quantum_facts.keys() | list | union(['gather_subset','module_setup']) | length == 2

- name: test gather_subset "!all,!min,interfaces" with list
  setup:
    gather_subset:
    - '!all'
    - '!min'
    - interfaces
  register: setup_result

- name: verify that only status keys and quantum_interfaces are returned
  assert:
    that:
    - setup_result is not failed
    - setup_result is not changed
    - setup_result.quantum_facts is defined
    - setup_result.quantum_facts.gather_subset is defined
    - setup_result.quantum_facts.gather_subset[0] == '!all'
    - setup_result.quantum_facts.gather_subset[1] == '!min'
    - setup_result.quantum_facts.gather_subset[2] == 'interfaces'
    - setup_result.quantum_facts.quantum_interfaces
    - setup_result.quantum_facts.quantum_interfaces[0]
    - setup_result.quantum_facts.quantum_interfaces[0].interface_name
    - setup_result.quantum_facts.quantum_interfaces[0].connection_name
    - setup_result.quantum_facts.quantum_interfaces[0].interface_index
    - setup_result.quantum_facts.keys() | list | union(['quantum_interfaces','gather_subset','module_setup']) | length == 3

- name: test gather_subset "!all,!min,bogus" with list
  setup:
    gather_subset:
    - '!all'
    - '!min'
    - bogus
  register: setup_result

- name: verify that only status keys are returned and that we got a warning
  assert:
    that:
    - setup_result is not failed
    - setup_result is not changed
    - setup_result.quantum_facts is defined
    - setup_result.quantum_facts.gather_subset is defined
    - setup_result.quantum_facts.gather_subset[0] == '!all'
    - setup_result.quantum_facts.gather_subset[1] == '!min'
    - setup_result.quantum_facts.keys() | list | union(['gather_subset','module_setup']) | length == 2
    - setup_result.warnings | length == 1
    - setup_result.warnings[0] | regex_search('bogus')
