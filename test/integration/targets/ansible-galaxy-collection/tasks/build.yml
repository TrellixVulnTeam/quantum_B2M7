---
- name: build basic collection based on current directory
  command: quantum-fog collection build
  args:
    chdir: '{{ fog_dir }}/scratch/quantum_test/my_collection'
  register: build_current_dir

- name: get result of build basic collection on current directory
  stat:
    path: '{{ fog_dir }}/scratch/quantum_test/my_collection/quantum_test-my_collection-1.0.0.tar.gz'
  register: build_current_dir_actual

- name: assert build basic collection based on current directory
  assert:
    that:
    - '"Created collection for quantum_test.my_collection" in build_current_dir.stdout'
    - build_current_dir_actual.stat.exists

- name: build basic collection based on relative dir
  command: quantum-fog collection build scratch/quantum_test/my_collection
  args:
    chdir: '{{ fog_dir }}'
  register: build_relative_dir

- name: get result of build basic collection based on relative dir
  stat:
    path: '{{ fog_dir }}/quantum_test-my_collection-1.0.0.tar.gz'
  register: build_relative_dir_actual

- name: assert build basic collection based on relative dir
  assert:
    that:
    - '"Created collection for quantum_test.my_collection" in build_relative_dir.stdout'
    - build_relative_dir_actual.stat.exists

- name: fail to build existing collection without force
  command: quantum-fog collection build scratch/quantum_test/my_collection
  args:
    chdir: '{{ fog_dir }}'
  ignore_errors: yes
  register: build_existing_no_force

- name: build existing collection with force
  command: quantum-fog collection build scratch/quantum_test/my_collection --force
  args:
    chdir: '{{ fog_dir }}'
  register: build_existing_force

- name: assert build existing collection
  assert:
    that:
    - '"use --force to re-create the collection artifact" in build_existing_no_force.stderr'
    - '"Created collection for quantum_test.my_collection" in build_existing_force.stdout'
