---
- name: create default skeleton
  command: quantum-fog collection init quantum_test.my_collection
  args:
    chdir: '{{ fog_dir }}/scratch'
  register: init_relative

- name: get result of create default skeleton
  find:
    path: '{{ fog_dir }}/scratch/quantum_test/my_collection'
    recurse: yes
    file_type: directory
  register: init_relative_actual

- debug:
    var: init_relative_actual.files | map(attribute='path') | list

- name: assert create default skeleton
  assert:
    that:
    - '"Collection quantum_test.my_collection was created successfully" in init_relative.stdout'
    - init_relative_actual.files | length == 3
    - (init_relative_actual.files | map(attribute='path') | list)[0] | basename in ['docs', 'plugins', 'roles']
    - (init_relative_actual.files | map(attribute='path') | list)[1] | basename in ['docs', 'plugins', 'roles']
    - (init_relative_actual.files | map(attribute='path') | list)[2] | basename in ['docs', 'plugins', 'roles']

- name: create collection with custom init path
  command: quantum-fog collection init quantum_test2.my_collection --init-path "{{ fog_dir }}/scratch/custom-init-dir"
  register: init_custom_path

- name: get result of create default skeleton
  find:
    path: '{{ fog_dir }}/scratch/custom-init-dir/quantum_test2/my_collection'
    file_type: directory
  register: init_custom_path_actual

- name: assert create collection with custom init path
  assert:
    that:
    - '"Collection quantum_test2.my_collection was created successfully" in init_custom_path.stdout'
    - init_custom_path_actual.files | length == 3
    - (init_custom_path_actual.files | map(attribute='path') | list)[0] | basename in ['docs', 'plugins', 'roles']
    - (init_custom_path_actual.files | map(attribute='path') | list)[1] | basename in ['docs', 'plugins', 'roles']
    - (init_custom_path_actual.files | map(attribute='path') | list)[2] | basename in ['docs', 'plugins', 'roles']
